{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"2022-06-02_KaranNarang_CapstoneProject6","provenance":[{"file_id":"1veWqbTIAiODYA8xMrXIT782MOU56ZXLx","timestamp":1653615568740},{"file_id":"1E2dOF_cHROWroQUTyEP0o0mTbPfLAV-C","timestamp":1622632342660},{"file_id":"1ZAnjyQIpaB3XOr9ctHDipKS0Yj9hWC03","timestamp":1585995899837},{"file_id":"15zjgvo45A90pt1MA3cHjOfHD2SAukA-G","timestamp":1585642454142},{"file_id":"1gPQ6mcJL3znUOSztfS_5uecqu8g5k1be","timestamp":1582868294037},{"file_id":"1Kg2lCMPuWYjfwqyZT9-cmivfpqk3I1FU","timestamp":1582786799035}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"UYmMpXkNw9I6"},"source":["# Capstone Project 7: Bengaluru House Prices - Data Cleaning\n"]},{"cell_type":"markdown","metadata":{"id":"PaanjkTewd2U"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"hCWxudn63AGS"},"source":["## Instructions"]},{"cell_type":"markdown","metadata":{"id":"8bYZAsBFseEl"},"source":["### Goal of the Project:\n","\n","This project is designed for you to practice and solve the activities that are based on the following concepts covered in classes 21 - 24:\n","\n"," - Creating box plots\n"," - Slicing a DataFrame\n"," - Treating missing values "]},{"cell_type":"markdown","metadata":{"id":"-ZbKhPEcsenP"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"x9vfVAsbslya"},"source":["### Context\n","\n","A techie, residing in Mumbai, who is a data scientist got an excellent job opportunity from one of his dream company in Bengaluru. He soon wants to shift to Bengaluru and hence, he decides to buy a home in the city.\n","\n","Buying a home, especially in a city like Bengaluru, is a tricky choice.\n","As he is a data scientist he manages to find the dataset for Bengaluru house prices on the internet.\n","\n","The dataset he found was vast with some useless information and some empty values. He only wants to extract some of the useful information from the dataset."]},{"cell_type":"markdown","metadata":{"id":"G9pdov_M0nzo"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"zTuudU95dt3-"},"source":["#### Getting Started\n","\n","Follow the steps described below to solve the project:\n","\n","1. Click on the link provided below to open the Colab file for this project.\n","   \n","   https://colab.research.google.com/drive/1veWqbTIAiODYA8xMrXIT782MOU56ZXLx\n","   \n","2. Create the duplicate copy of the Colab file. Here are the steps to create the duplicate copy:\n","\n","    - Click on the **File** menu. A new drop-down list will appear.\n","\n","      <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/0_file_menu.png' width=500>\n","\n","    - Click on the **Save a copy in Drive** option. A duplicate copy will get created. It will open up in the new tab on your web browser.\n","\n","      <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/1_create_colab_duplicate_copy.png' width=500>\n","\n","     - After creating the duplicate copy of the notebook, please rename it in the **YYYY-MM-DD_StudentName_CapstoneProject6** format. \n","\n","3. Now, write your code in the prescribed code cells."]},{"cell_type":"markdown","metadata":{"id":"jJOHcRMzdtCH"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"M8b9tQ1DyJ3j"},"source":["### Problem Statement\n","\n","The dataset acquired by the techie is full of irregularities, incorrect values, and missing values. As a data scientist (or analyst in this context), your task is to clean the dataset given to you. \n","\n","This process of preparing data for analysis by removing or modifying data that is incorrect, incomplete, irrelevant, duplicated, or improperly formatted is known as **data cleaning**.\n"]},{"cell_type":"markdown","metadata":{"id":"wDxT79GYyJIk"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"dubnW7ER0mZG"},"source":["### Dataset Information\n","\n","This dataset contains several factors that a potential home buyer considers before purchasing a house. Here are the factors:\n","\n","1. `area_type`: Whether the house has a built-up area or plot area.\n","\n","2. `availability`: Whether the house is in the ready-to-move state or is there an exact date on which the house will be ready for occupancy.\n","\n","3. `location`: The name of the locality in Bengaluru where the house is situated.\n","\n","4. `size`: Whether the house is 1 BHK, 2 BHK, 3 BHK, etc. The term BHK stands for *Bedroom, Hall & Kitchen*.\n","\n","5. `society`: Name of the society where the house is located.\n","\n","6. `total_sqft`: The total area of the house in square feet.\n","\n","7. `bath`: Number of bathrooms in the house.\n","\n","8. `balcony`: Number of balconies in the house.\n","\n","9. `price`: Price of the house in lakhs (Indian rupees).\n"]},{"cell_type":"markdown","metadata":{"id":"TUjdyP2EyGtK"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"toeLx5LJpIV-"},"source":["### Things To Do\n","\n","- Create a Pandas DataFrame for the Bengaluru house prices dataset.\n","\n","- Find the missing values in the DataFrame and replace them with the right missing values. However, if a column has more than 15% missing values then drop (or remove) the column from the DataFrame except for the `location`, `size` and `total_sqft` columns because the house prices are directly dependent on these three crucial parameters. *In fact, the rate of a house is reported as a cost per unit area of the house*.\n","\n","- Drop (or remove) the rows containing the missing values in the `location`,\t`size`, and `total_sqft` columns. Additionally, drop any row which contains nonsensical values in the context of houses."]},{"cell_type":"markdown","metadata":{"id":"5JRlGIBRqCGl"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"wA3l9lfV-7da"},"source":["## Specific Tasks to Achieve the Main Goal:"]},{"cell_type":"markdown","metadata":{"id":"UCusTfW0tcxe"},"source":["#### 1. Import Modules\n","\n","First import all the necessary modules to create a DataFrame and box plots."]},{"cell_type":"code","metadata":{"id":"6RL71w3ntzcH","executionInfo":{"status":"ok","timestamp":1654217774490,"user_tz":300,"elapsed":3,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Import the 'pandas', 'matplotlib.pyplot' and 'seaborn' modules.\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"execution_count":26,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RETr5Tv1JBls"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"ozinbHmwt34m"},"source":["#### 2. Load The Dataset\n","\n","Create a Pandas DataFrame by loading the dataset which is provided in the comma-separated values (CSV) file. Also, display the number of rows and columns in the DataFrame. Here's the link to the dataset:\n","\n","https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/bengaluru-house-prices/Bengaluru_House_Prices.csv"]},{"cell_type":"code","metadata":{"id":"6aLwGMehuABF","executionInfo":{"status":"ok","timestamp":1654217775025,"user_tz":300,"elapsed":280,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Create the DataFrame using the 'read_csv()' function of the 'pandas' module\n","# Dataset Link: https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/bengaluru-house-prices/Bengaluru_House_Prices.csv\n","df = pd.read_csv('https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/bengaluru-house-prices/Bengaluru_House_Prices.csv')"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZW6agouUaUIU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217775025,"user_tz":300,"elapsed":5,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"21f8e595-0f52-424d-a8c4-1bf385c02378"},"source":["# Display the number of rows and columns using the 'shape' keyword.\n","df.shape"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(13320, 9)"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","metadata":{"id":"jOZ0Od6GUPm9"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"cu9yQsjRUSlF"},"source":["#### 3. Check For The Missing Values"]},{"cell_type":"markdown","metadata":{"id":"DL1ED9JzPpy2"},"source":["- Compute the total number of missing values in the DataFrame.\n","\n","- Compute the percentage of missing values in the DataFrame. If a column has more than 15% missing values then drop (or remove) the column from the DataFrame. "]},{"cell_type":"code","metadata":{"id":"bQnQ62lRFCpp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217775324,"user_tz":300,"elapsed":302,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"4b60f3e9-14ef-46b9-8ea0-5c0e26869d1f"},"source":["# Find the total number of missing values in each column.\n","df.isnull().sum()"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["area_type          0\n","availability       0\n","location           1\n","size              16\n","society         5502\n","total_sqft         0\n","bath              73\n","balcony          609\n","price              0\n","dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","metadata":{"id":"t5eFppZg3v4x"},"source":["**Hint**: You can find the total number of missing values in each column by using the `sum()` function on top of the `isnull()` function."]},{"cell_type":"markdown","metadata":{"id":"0hK2plLY038e"},"source":["**Q:** Which column has the most number of missing values?\n","\n","**A:** society"]},{"cell_type":"code","metadata":{"id":"SNcs2rvkqg7u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217775326,"user_tz":300,"elapsed":24,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"10845ac4-0682-45be-bf2c-598ca18bb0bb"},"source":["# Find the percentage of missing values\n","percent_missing = df.isnull().sum() * 100 / len(df)\n","percent_missing"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["area_type        0.000000\n","availability     0.000000\n","location         0.007508\n","size             0.120120\n","society         41.306306\n","total_sqft       0.000000\n","bath             0.548048\n","balcony          4.572072\n","price            0.000000\n","dtype: float64"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"9brsJCvZ4bTO"},"source":["**Hint** : You can calculate the percentage of missing values in each column by multiplying the total number of missing values in each column with 100 and dividing the value with the total number of rows in the DataFrame."]},{"cell_type":"markdown","metadata":{"id":"srdWtGgUWAx4"},"source":["**Q:** Which is/are column(s) that need to be removed? Write \"Not Applicable\" if there are none.\n","\n","**A:** location, size, society, bath, balcony\n"]},{"cell_type":"markdown","metadata":{"id":"bvs4nQC5wrGN"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"t44eNoOFhu2s"},"source":["### 4. Data Cleaning - Rows\n","\n","First things first, drop (or remove) the rows containing the missing values in the `location`,\t`size`, and `total_sqft` columns because they are the most important parameters in governing the price of a house."]},{"cell_type":"markdown","metadata":{"id":"Kna6Gzcg4ij4"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"8IgXW9txcJDy"},"source":["#### 4.1 Removing Rows From The `location` Column\n","\n","You need to remove all the rows containing the missing values in the `location` column."]},{"cell_type":"code","metadata":{"id":"Ux5G6_CGUxTb","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1654217775326,"user_tz":300,"elapsed":21,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"fa2574d1-f552-495c-d3b3-24b011eb1ab5"},"source":["# Get all the rows having the missing values in the 'location'.\n","df.loc[df['location'].isnull() == True, :]"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                area_type   availability location   size  society total_sqft  \\\n","568  Super built-up  Area  Ready To Move      NaN  3 BHK  Grare S       1600   \n","\n","     bath  balcony  price  \n","568   3.0      2.0   86.0  "],"text/html":["\n","  <div id=\"df-cb5227b4-08ff-40fc-b1b6-f0b2279751eb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>location</th>\n","      <th>size</th>\n","      <th>society</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>568</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>NaN</td>\n","      <td>3 BHK</td>\n","      <td>Grare S</td>\n","      <td>1600</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>86.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb5227b4-08ff-40fc-b1b6-f0b2279751eb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cb5227b4-08ff-40fc-b1b6-f0b2279751eb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cb5227b4-08ff-40fc-b1b6-f0b2279751eb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","metadata":{"id":"UoGwAZ4u4m-J"},"source":["**Hint**: You can locate all the rows containing the missing values by using the `isnull()` function inside the `loc[]` function.\n","\n","Syntax: `df.loc[df['column_name'].isnull() == True, :]`"]},{"cell_type":"markdown","metadata":{"id":"TsW1ScHfZHfF"},"source":["**Q:** How many rows have the missing values in the `location` column?\n","\n","**A:** "]},{"cell_type":"code","metadata":{"id":"fO2eYVUZXQsF","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1654217775328,"user_tz":300,"elapsed":21,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"bd9c7147-e326-4862-a971-225f20b4751d"},"source":["# Discard the rows containing the missing values in the 'location' column.\n","df = df.loc[df['location'].isnull() == False, :]\n","df"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  area_type   availability                  location  \\\n","0      Super built-up  Area         19-Dec  Electronic City Phase II   \n","1                Plot  Area  Ready To Move          Chikka Tirupathi   \n","2            Built-up  Area  Ready To Move               Uttarahalli   \n","3      Super built-up  Area  Ready To Move        Lingadheeranahalli   \n","4      Super built-up  Area  Ready To Move                  Kothanur   \n","...                     ...            ...                       ...   \n","13315        Built-up  Area  Ready To Move                Whitefield   \n","13316  Super built-up  Area  Ready To Move             Richards Town   \n","13317        Built-up  Area  Ready To Move     Raja Rajeshwari Nagar   \n","13318  Super built-up  Area         18-Jun           Padmanabhanagar   \n","13319  Super built-up  Area  Ready To Move              Doddathoguru   \n","\n","            size  society total_sqft  bath  balcony   price  \n","0          2 BHK  Coomee        1056   2.0      1.0   39.07  \n","1      4 Bedroom  Theanmp       2600   5.0      3.0  120.00  \n","2          3 BHK      NaN       1440   2.0      3.0   62.00  \n","3          3 BHK  Soiewre       1521   3.0      1.0   95.00  \n","4          2 BHK      NaN       1200   2.0      1.0   51.00  \n","...          ...      ...        ...   ...      ...     ...  \n","13315  5 Bedroom  ArsiaEx       3453   4.0      0.0  231.00  \n","13316      4 BHK      NaN       3600   5.0      NaN  400.00  \n","13317      2 BHK  Mahla T       1141   2.0      1.0   60.00  \n","13318      4 BHK  SollyCl       4689   4.0      1.0  488.00  \n","13319      1 BHK      NaN        550   1.0      1.0   17.00  \n","\n","[13319 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-16ad917e-c6d5-4e9f-8760-a57cb7702c57\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>location</th>\n","      <th>size</th>\n","      <th>society</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Super built-up  Area</td>\n","      <td>19-Dec</td>\n","      <td>Electronic City Phase II</td>\n","      <td>2 BHK</td>\n","      <td>Coomee</td>\n","      <td>1056</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>39.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Chikka Tirupathi</td>\n","      <td>4 Bedroom</td>\n","      <td>Theanmp</td>\n","      <td>2600</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>120.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Uttarahalli</td>\n","      <td>3 BHK</td>\n","      <td>NaN</td>\n","      <td>1440</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>62.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Lingadheeranahalli</td>\n","      <td>3 BHK</td>\n","      <td>Soiewre</td>\n","      <td>1521</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>95.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Kothanur</td>\n","      <td>2 BHK</td>\n","      <td>NaN</td>\n","      <td>1200</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>51.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13315</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Whitefield</td>\n","      <td>5 Bedroom</td>\n","      <td>ArsiaEx</td>\n","      <td>3453</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>231.00</td>\n","    </tr>\n","    <tr>\n","      <th>13316</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Richards Town</td>\n","      <td>4 BHK</td>\n","      <td>NaN</td>\n","      <td>3600</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>13317</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Raja Rajeshwari Nagar</td>\n","      <td>2 BHK</td>\n","      <td>Mahla T</td>\n","      <td>1141</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>60.00</td>\n","    </tr>\n","    <tr>\n","      <th>13318</th>\n","      <td>Super built-up  Area</td>\n","      <td>18-Jun</td>\n","      <td>Padmanabhanagar</td>\n","      <td>4 BHK</td>\n","      <td>SollyCl</td>\n","      <td>4689</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>488.00</td>\n","    </tr>\n","    <tr>\n","      <th>13319</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Doddathoguru</td>\n","      <td>1 BHK</td>\n","      <td>NaN</td>\n","      <td>550</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>17.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>13319 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16ad917e-c6d5-4e9f-8760-a57cb7702c57')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-16ad917e-c6d5-4e9f-8760-a57cb7702c57 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-16ad917e-c6d5-4e9f-8760-a57cb7702c57');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"1egkrDCH4-3j"},"source":["**Hint** : Use `isnull() == False` inside the `loc[]` function to retrieve the rows without missing values from the `location` column.\n","\n","Syntax: `df = df.loc[df['column_name'].isnull() == False, :]`"]},{"cell_type":"markdown","metadata":{"id":"psLCPdlccSEb"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"qOwzZDK8clRz"},"source":["#### 4.2 Removing Rows From The `size` Column\n","\n","Now, you need to remove all the rows containing the missing values in the `size` column."]},{"cell_type":"code","metadata":{"id":"pBPLf3oSUthv","colab":{"base_uri":"https://localhost:8080/","height":551},"executionInfo":{"status":"ok","timestamp":1654217775328,"user_tz":300,"elapsed":19,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"f23427b0-0173-467b-8258-58ecf15483b3"},"source":["# Get the rows having the missing values in the 'size' column.\n","df.loc[df['size'].isnull() == True, :]"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        area_type          availability        location size  society  \\\n","579    Plot  Area  Immediate Possession  Sarjapur  Road  NaN  Asiss B   \n","1775   Plot  Area  Immediate Possession        IVC Road  NaN  Orana N   \n","2264   Plot  Area  Immediate Possession    Banashankari  NaN      NaN   \n","2809   Plot  Area  Immediate Possession  Sarjapur  Road  NaN  AsdiaAr   \n","2862   Plot  Area  Immediate Possession     Devanahalli  NaN  Ajleyor   \n","5333   Plot  Area  Immediate Possession     Devanahalli  NaN  Emngs S   \n","6423   Plot  Area  Immediate Possession      Whitefield  NaN  SRniaGa   \n","6636   Plot  Area  Immediate Possession          Jigani  NaN  S2enste   \n","6719   Plot  Area  Immediate Possession         Hoskote  NaN  SJowsn    \n","7680   Plot  Area  Immediate Possession    Kasavanhalli  NaN      NaN   \n","8306   Plot  Area  Immediate Possession          Anekal  NaN  Vaensnd   \n","8565   Plot  Area  Immediate Possession      Carmelaram  NaN  Ocezes    \n","8703   Plot  Area  Immediate Possession     Mysore Road  NaN  Naoden    \n","10634  Plot  Area  Immediate Possession      Rajankunte  NaN      NaN   \n","11019  Plot  Area  Immediate Possession       Yelahanka  NaN  Saaveha   \n","11569  Plot  Area  Immediate Possession      Hosur Road  NaN  AVeldun   \n","\n","        total_sqft  bath  balcony    price  \n","579    1200 - 2400   NaN      NaN   34.185  \n","1775   2000 - 5634   NaN      NaN  124.000  \n","2264          2400   NaN      NaN  460.000  \n","2809   1200 - 2400   NaN      NaN   28.785  \n","2862   1500 - 2400   NaN      NaN   46.800  \n","5333   2100 - 5405   NaN      NaN  177.115  \n","6423          2324   NaN      NaN   26.730  \n","6636          1500   NaN      NaN   25.490  \n","6719    800 - 2660   NaN      NaN   28.545  \n","7680          5000   NaN      NaN  400.000  \n","8306          1453   NaN      NaN   16.500  \n","8565          2000   NaN      NaN  120.000  \n","8703   1200 - 2400   NaN      NaN   42.300  \n","10634         1575   NaN      NaN   31.110  \n","11019  1200 - 1800   NaN      NaN   12.750  \n","11569         1350   NaN      NaN    8.440  "],"text/html":["\n","  <div id=\"df-d4955dbb-ab4b-42da-94e0-f848e448b414\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>location</th>\n","      <th>size</th>\n","      <th>society</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>579</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Sarjapur  Road</td>\n","      <td>NaN</td>\n","      <td>Asiss B</td>\n","      <td>1200 - 2400</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>34.185</td>\n","    </tr>\n","    <tr>\n","      <th>1775</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>IVC Road</td>\n","      <td>NaN</td>\n","      <td>Orana N</td>\n","      <td>2000 - 5634</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>124.000</td>\n","    </tr>\n","    <tr>\n","      <th>2264</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Banashankari</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2400</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>460.000</td>\n","    </tr>\n","    <tr>\n","      <th>2809</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Sarjapur  Road</td>\n","      <td>NaN</td>\n","      <td>AsdiaAr</td>\n","      <td>1200 - 2400</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28.785</td>\n","    </tr>\n","    <tr>\n","      <th>2862</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Devanahalli</td>\n","      <td>NaN</td>\n","      <td>Ajleyor</td>\n","      <td>1500 - 2400</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>46.800</td>\n","    </tr>\n","    <tr>\n","      <th>5333</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Devanahalli</td>\n","      <td>NaN</td>\n","      <td>Emngs S</td>\n","      <td>2100 - 5405</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>177.115</td>\n","    </tr>\n","    <tr>\n","      <th>6423</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Whitefield</td>\n","      <td>NaN</td>\n","      <td>SRniaGa</td>\n","      <td>2324</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>26.730</td>\n","    </tr>\n","    <tr>\n","      <th>6636</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Jigani</td>\n","      <td>NaN</td>\n","      <td>S2enste</td>\n","      <td>1500</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>25.490</td>\n","    </tr>\n","    <tr>\n","      <th>6719</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Hoskote</td>\n","      <td>NaN</td>\n","      <td>SJowsn</td>\n","      <td>800 - 2660</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28.545</td>\n","    </tr>\n","    <tr>\n","      <th>7680</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Kasavanhalli</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>400.000</td>\n","    </tr>\n","    <tr>\n","      <th>8306</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Anekal</td>\n","      <td>NaN</td>\n","      <td>Vaensnd</td>\n","      <td>1453</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>16.500</td>\n","    </tr>\n","    <tr>\n","      <th>8565</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Carmelaram</td>\n","      <td>NaN</td>\n","      <td>Ocezes</td>\n","      <td>2000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>120.000</td>\n","    </tr>\n","    <tr>\n","      <th>8703</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Mysore Road</td>\n","      <td>NaN</td>\n","      <td>Naoden</td>\n","      <td>1200 - 2400</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>42.300</td>\n","    </tr>\n","    <tr>\n","      <th>10634</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Rajankunte</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1575</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>31.110</td>\n","    </tr>\n","    <tr>\n","      <th>11019</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Yelahanka</td>\n","      <td>NaN</td>\n","      <td>Saaveha</td>\n","      <td>1200 - 1800</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.750</td>\n","    </tr>\n","    <tr>\n","      <th>11569</th>\n","      <td>Plot  Area</td>\n","      <td>Immediate Possession</td>\n","      <td>Hosur Road</td>\n","      <td>NaN</td>\n","      <td>AVeldun</td>\n","      <td>1350</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.440</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4955dbb-ab4b-42da-94e0-f848e448b414')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d4955dbb-ab4b-42da-94e0-f848e448b414 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d4955dbb-ab4b-42da-94e0-f848e448b414');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"FJYWDgWLZWq6"},"source":["**Q:** How many rows have the missing values in the `size` column?\n","\n","**A:** 16"]},{"cell_type":"code","metadata":{"id":"uJFikSerboTD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217775329,"user_tz":300,"elapsed":19,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"e6872f07-508c-4a45-93f4-338b4d4aa7b8"},"source":["# Total number of rows having the missing values in the 'size' column.\n","df.loc[df['size'].isnull() == True, :].shape[0]"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","metadata":{"id":"UnvWT5GL6bM0"},"source":["**Hint**: To get the total number of rows having the missing values in the 'size' column you can use `shape[0]` as shown in the below syntax,\n","\n","`df.loc[df['column_name'].isnull() == True, :].shape[0]`"]},{"cell_type":"code","metadata":{"id":"dYar2FSLWolC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217775599,"user_tz":300,"elapsed":284,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"6a00b7ed-643e-4f15-b91d-3675af33b0a9"},"source":["# Discard the rows containing the missing values in the 'size' column.\n","df = df.loc[df['size'].isnull() == False, :]\n","df.shape"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(13303, 9)"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","metadata":{"id":"IWVpSd4y6-Pk"},"source":["**Hint** : Use `isnull() == False` inside the `loc[]` function to retrieve the rows without missing values from the `size` column.\n","\n","Syntax: `df = df.loc[df['column_name'].isnull() == False, :]`"]},{"cell_type":"markdown","metadata":{"id":"b4rQMnK819S9"},"source":["**Q:** How many rows are there in the DataFrame after removing the rows that need to be removed?\n","\n","**A:** "]},{"cell_type":"markdown","metadata":{"id":"KFs_qwMVc8OR"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"KmJTE6kPdCuY"},"source":["#### 4.3 Removing Rows From `total_sqft` Column\n","\n","Now, you need to remove all the rows containing the missing values in the `total_sqft` column."]},{"cell_type":"code","metadata":{"id":"EtBWeHKndGOW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217775600,"user_tz":300,"elapsed":24,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"8e2876aa-d6bd-4556-8bd9-0913c65a699c"},"source":["# Get the rows having the missing values in the 'total_sqft' column.\n","df.loc[df['total_sqft'].isnull() == True, :].shape[0]"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"gegqvqrRdQhq"},"source":["**Q:** How many rows have the missing values in the `size` column?\n","\n","**A:** "]},{"cell_type":"markdown","metadata":{"id":"2cR2MSa0AueA"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"jrJMw0K3hUIG"},"source":["#### 4.4 Removing Rows From `bath` Column\n","\n","Assume that in a practical situation, no house, even in a city like Bengaluru, will have more than 5 bathrooms. Hence, drop all the rows in the `bath` column containing more than 5 bathrooms."]},{"cell_type":"code","metadata":{"id":"JKOskDUMiG3z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217775601,"user_tz":300,"elapsed":21,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"f74b3c05-56b4-40d1-b8dc-122ca9a0d2a6"},"source":["# Get the rows having more than 5 bathrooms in the 'bath' column.\n","df[df['bath'] > 5].shape"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(515, 9)"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","metadata":{"id":"69b9R_Jm1rYT"},"source":["**Hints** You can get the rows having more than 5 bathrooms using the greater than logical operator `>` .\n","\n","**Syntax**: `df[df['column_name'] > 5]`"]},{"cell_type":"markdown","metadata":{"id":"lrpp7DYMiZFk"},"source":["**Q:** How many rows have more than 5 bathrooms in the `bath` column?\n","\n","**A:** "]},{"cell_type":"code","metadata":{"id":"DKHlMJ5wijr2","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1654217775602,"user_tz":300,"elapsed":18,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"0d79be4a-eb2b-4866-8195-c2e6741b78ce"},"source":["# Discard the rows having more than 5 bathrooms in the 'bath' column.\n","df = df[df['bath'] <= 5]\n","df"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  area_type   availability                  location  \\\n","0      Super built-up  Area         19-Dec  Electronic City Phase II   \n","1                Plot  Area  Ready To Move          Chikka Tirupathi   \n","2            Built-up  Area  Ready To Move               Uttarahalli   \n","3      Super built-up  Area  Ready To Move        Lingadheeranahalli   \n","4      Super built-up  Area  Ready To Move                  Kothanur   \n","...                     ...            ...                       ...   \n","13315        Built-up  Area  Ready To Move                Whitefield   \n","13316  Super built-up  Area  Ready To Move             Richards Town   \n","13317        Built-up  Area  Ready To Move     Raja Rajeshwari Nagar   \n","13318  Super built-up  Area         18-Jun           Padmanabhanagar   \n","13319  Super built-up  Area  Ready To Move              Doddathoguru   \n","\n","            size  society total_sqft  bath  balcony   price  \n","0          2 BHK  Coomee        1056   2.0      1.0   39.07  \n","1      4 Bedroom  Theanmp       2600   5.0      3.0  120.00  \n","2          3 BHK      NaN       1440   2.0      3.0   62.00  \n","3          3 BHK  Soiewre       1521   3.0      1.0   95.00  \n","4          2 BHK      NaN       1200   2.0      1.0   51.00  \n","...          ...      ...        ...   ...      ...     ...  \n","13315  5 Bedroom  ArsiaEx       3453   4.0      0.0  231.00  \n","13316      4 BHK      NaN       3600   5.0      NaN  400.00  \n","13317      2 BHK  Mahla T       1141   2.0      1.0   60.00  \n","13318      4 BHK  SollyCl       4689   4.0      1.0  488.00  \n","13319      1 BHK      NaN        550   1.0      1.0   17.00  \n","\n","[12731 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-0f5d8a12-4489-4eb3-a48b-20eac0fd2535\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>location</th>\n","      <th>size</th>\n","      <th>society</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Super built-up  Area</td>\n","      <td>19-Dec</td>\n","      <td>Electronic City Phase II</td>\n","      <td>2 BHK</td>\n","      <td>Coomee</td>\n","      <td>1056</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>39.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Chikka Tirupathi</td>\n","      <td>4 Bedroom</td>\n","      <td>Theanmp</td>\n","      <td>2600</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>120.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Uttarahalli</td>\n","      <td>3 BHK</td>\n","      <td>NaN</td>\n","      <td>1440</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>62.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Lingadheeranahalli</td>\n","      <td>3 BHK</td>\n","      <td>Soiewre</td>\n","      <td>1521</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>95.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Kothanur</td>\n","      <td>2 BHK</td>\n","      <td>NaN</td>\n","      <td>1200</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>51.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13315</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Whitefield</td>\n","      <td>5 Bedroom</td>\n","      <td>ArsiaEx</td>\n","      <td>3453</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>231.00</td>\n","    </tr>\n","    <tr>\n","      <th>13316</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Richards Town</td>\n","      <td>4 BHK</td>\n","      <td>NaN</td>\n","      <td>3600</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>13317</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Raja Rajeshwari Nagar</td>\n","      <td>2 BHK</td>\n","      <td>Mahla T</td>\n","      <td>1141</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>60.00</td>\n","    </tr>\n","    <tr>\n","      <th>13318</th>\n","      <td>Super built-up  Area</td>\n","      <td>18-Jun</td>\n","      <td>Padmanabhanagar</td>\n","      <td>4 BHK</td>\n","      <td>SollyCl</td>\n","      <td>4689</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>488.00</td>\n","    </tr>\n","    <tr>\n","      <th>13319</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Doddathoguru</td>\n","      <td>1 BHK</td>\n","      <td>NaN</td>\n","      <td>550</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>17.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12731 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f5d8a12-4489-4eb3-a48b-20eac0fd2535')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0f5d8a12-4489-4eb3-a48b-20eac0fd2535 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0f5d8a12-4489-4eb3-a48b-20eac0fd2535');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","metadata":{"id":"Egt6QPnhizMa"},"source":["**Q:** How many rows have atmost 5 bathrooms in the `bath` column?\n","\n","**A:** "]},{"cell_type":"markdown","metadata":{"id":"EHPFKZyYhTZp"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"Y_Ebe-MZAwLp"},"source":["### 5. Data Cleaning - Columns "]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"jbWgzBvNXBxS","executionInfo":{"status":"ok","timestamp":1654217775603,"user_tz":300,"elapsed":17,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"670dfad4-af5d-446d-a68f-7549e2b3722e"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  area_type   availability                  location  \\\n","0      Super built-up  Area         19-Dec  Electronic City Phase II   \n","1                Plot  Area  Ready To Move          Chikka Tirupathi   \n","2            Built-up  Area  Ready To Move               Uttarahalli   \n","3      Super built-up  Area  Ready To Move        Lingadheeranahalli   \n","4      Super built-up  Area  Ready To Move                  Kothanur   \n","...                     ...            ...                       ...   \n","13315        Built-up  Area  Ready To Move                Whitefield   \n","13316  Super built-up  Area  Ready To Move             Richards Town   \n","13317        Built-up  Area  Ready To Move     Raja Rajeshwari Nagar   \n","13318  Super built-up  Area         18-Jun           Padmanabhanagar   \n","13319  Super built-up  Area  Ready To Move              Doddathoguru   \n","\n","            size  society total_sqft  bath  balcony   price  \n","0          2 BHK  Coomee        1056   2.0      1.0   39.07  \n","1      4 Bedroom  Theanmp       2600   5.0      3.0  120.00  \n","2          3 BHK      NaN       1440   2.0      3.0   62.00  \n","3          3 BHK  Soiewre       1521   3.0      1.0   95.00  \n","4          2 BHK      NaN       1200   2.0      1.0   51.00  \n","...          ...      ...        ...   ...      ...     ...  \n","13315  5 Bedroom  ArsiaEx       3453   4.0      0.0  231.00  \n","13316      4 BHK      NaN       3600   5.0      NaN  400.00  \n","13317      2 BHK  Mahla T       1141   2.0      1.0   60.00  \n","13318      4 BHK  SollyCl       4689   4.0      1.0  488.00  \n","13319      1 BHK      NaN        550   1.0      1.0   17.00  \n","\n","[12731 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-e5a93d79-7803-4a6b-901c-9565a9331db9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>location</th>\n","      <th>size</th>\n","      <th>society</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Super built-up  Area</td>\n","      <td>19-Dec</td>\n","      <td>Electronic City Phase II</td>\n","      <td>2 BHK</td>\n","      <td>Coomee</td>\n","      <td>1056</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>39.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Chikka Tirupathi</td>\n","      <td>4 Bedroom</td>\n","      <td>Theanmp</td>\n","      <td>2600</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>120.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Uttarahalli</td>\n","      <td>3 BHK</td>\n","      <td>NaN</td>\n","      <td>1440</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>62.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Lingadheeranahalli</td>\n","      <td>3 BHK</td>\n","      <td>Soiewre</td>\n","      <td>1521</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>95.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Kothanur</td>\n","      <td>2 BHK</td>\n","      <td>NaN</td>\n","      <td>1200</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>51.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13315</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Whitefield</td>\n","      <td>5 Bedroom</td>\n","      <td>ArsiaEx</td>\n","      <td>3453</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>231.00</td>\n","    </tr>\n","    <tr>\n","      <th>13316</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Richards Town</td>\n","      <td>4 BHK</td>\n","      <td>NaN</td>\n","      <td>3600</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>13317</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Raja Rajeshwari Nagar</td>\n","      <td>2 BHK</td>\n","      <td>Mahla T</td>\n","      <td>1141</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>60.00</td>\n","    </tr>\n","    <tr>\n","      <th>13318</th>\n","      <td>Super built-up  Area</td>\n","      <td>18-Jun</td>\n","      <td>Padmanabhanagar</td>\n","      <td>4 BHK</td>\n","      <td>SollyCl</td>\n","      <td>4689</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>488.00</td>\n","    </tr>\n","    <tr>\n","      <th>13319</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>Doddathoguru</td>\n","      <td>1 BHK</td>\n","      <td>NaN</td>\n","      <td>550</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>17.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12731 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5a93d79-7803-4a6b-901c-9565a9331db9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e5a93d79-7803-4a6b-901c-9565a9331db9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e5a93d79-7803-4a6b-901c-9565a9331db9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","metadata":{"id":"0uxtAmKtBLOF"},"source":["Compute the percentage of missing values in the DataFrame again. If a column has more than 15% missing values then drop (or remove) the column from the DataFrame. \n"]},{"cell_type":"code","metadata":{"id":"8QO2WxiTdlwd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654217776043,"user_tz":300,"elapsed":455,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"a284f615-a7ed-4bd7-eeb2-695bf6510e55"},"source":["# Get the percentage of missing values in each column.\n","print(df.loc[df['area_type'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['location'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['size'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['society'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['total_sqft'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['bath'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['balcony'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['price'].isnull() == True, :].shape[0]*100/12731)"],"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["0.0\n","0.0\n","0.0\n","39.910454795381355\n","0.0\n","0.0\n","3.361872594454481\n","0.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"2e3xE8642kAx"},"source":["**Hint**: You can calculate the percentage of missing values in each column by multiplying the number of missing values with 100 and dividing the resulting value with total number of rows in the DataFrame."]},{"cell_type":"markdown","metadata":{"id":"PXjHYRRYdp3M"},"source":["**Q:** Which is/are column(s) that need to be removed? Write \"Not Applicable\" if there are none.\n","\n","**A:** \n"]},{"cell_type":"markdown","metadata":{"id":"ku_H7vBn3wha"},"source":["**Q:** Did the overall percentage of the missing values drop if compared to the initial percentage of the missing values? Write yes or no.\n","\n","**A:** "]},{"cell_type":"markdown","metadata":{"id":"o1ePPupRla-i"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"Hsq9gQa_eIxq"},"source":["#### 5.1 Columns To Be Retained\n","\n","Create a list of columns that need to be retained and store it in a variable `cols_to_keep`. \n","\n"," - area_type        \n"," - availability     \n"," - location         \n"," - size                    \n"," - total_sqft      \n"," - bath            \n"," - balcony         \n"," - price           "]},{"cell_type":"code","metadata":{"id":"iC2b6UXEWba5","executionInfo":{"status":"ok","timestamp":1654217776046,"user_tz":300,"elapsed":35,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Create a list of the columns to be retained.   \n","cols_to_keep = ['area_type', 'availability', 'size', 'total_sqft', 'bath','balcony','price']\n"],"execution_count":41,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cdLiNXjm4d2w"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"DPUBxFcNlq-_"},"source":["#### 5.2 Retaining Columns\n","\n","Retain appropriate columns in the DataFrame."]},{"cell_type":"code","metadata":{"id":"mxlxyisTV0Mo","executionInfo":{"status":"ok","timestamp":1654217776049,"user_tz":300,"elapsed":37,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Retain the appropriate columns in the DataFrame using the 'loc[]' function.\n","df=df.loc[:, cols_to_keep]"],"execution_count":42,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-N4N1bqBIcYS"},"source":["**Hint**: You need to create a DataFrame with columns having missing values not more than 15%. This can be done by passing the variable holding the list of columns inside the `loc[]` function as a second parameter. "]},{"cell_type":"markdown","metadata":{"id":"3GiM15HKl7ht"},"source":["Again calculate the percetange of missing values in the DataFrame."]},{"cell_type":"code","metadata":{"id":"kfI67mPeiqy1","executionInfo":{"status":"ok","timestamp":1654217776053,"user_tz":300,"elapsed":40,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"eb0b9906-f589-4d2d-af18-fbd192d2c65e"},"source":["# Percentage of the missing values in the DataFrame.\n","print(df.loc[df['area_type'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['size'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['total_sqft'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['bath'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['balcony'].isnull() == True, :].shape[0]*100/12731)\n","print(df.loc[df['price'].isnull() == True, :].shape[0]*100/12731)"],"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["0.0\n","0.0\n","0.0\n","0.0\n","3.361872594454481\n","0.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"-tnlKd4yf6Ey"},"source":["**Q:** Write down (or identify) the column(s) in which the values need to be replaced with an appropriate value.\n","\n","**A:** balcony"]},{"cell_type":"markdown","metadata":{"id":"YEJ6-e_Kll9O"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"GJ_AL5PenPyx"},"source":["#### 6 Replace The Missing Values \n","\n","While performing this task, you need to make sure that the replaced values do not drastically affect the trend of the values in the identified column(s) from the entire dataset.\n","\n","You can check the trend of the values by creating a box plot before and after replacing the missing (or null) values with the appropriate values.\n","\n","- Since the number of bedrooms or the number of bathrooms value is a discrete value, you need to replace the missing values with either the modal value or the median value. \n","\n","- Replace the values in the identified column(s).\n","\n","- Get the descriptive statistics of the identified column(s) and also create a box plot to ensure that the replaced values do not drastically affect the trend of the values.\n","\n","**Notes**: \n","- Make sure the replacement value makes sense in the real-world context. \n","  \n","  For e.g., there can't be 2.5 bathrooms or 2.5 balconies in a house. \n","  \n","- The replacement value should make sense in the context of the house configuration. For e.g., a 2 BHK house having 5 bathrooms doesn't make sense. Similarly, a 2 BHK house having 5 balconies doesn't make sense."]},{"cell_type":"code","metadata":{"id":"iYSglvW_cmL5","executionInfo":{"status":"ok","timestamp":1654217776058,"user_tz":300,"elapsed":32,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":300},"outputId":"f9a05ada-edc2-4409-8511-8315b0e3a62d"},"source":["# Get the descriptive statistics of the 'balcony' column using the 'describe()' function.\n","df.describe()"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               bath       balcony         price\n","count  12731.000000  12303.000000  12731.000000\n","mean       2.512214      1.575388    105.197148\n","std        0.901812      0.806303    128.252986\n","min        1.000000      0.000000      8.000000\n","25%        2.000000      1.000000     49.000000\n","50%        2.000000      2.000000     70.000000\n","75%        3.000000      2.000000    112.000000\n","max        5.000000      3.000000   2912.000000"],"text/html":["\n","  <div id=\"df-9da42c8c-2289-4387-aba7-43392ae13290\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>12731.000000</td>\n","      <td>12303.000000</td>\n","      <td>12731.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.512214</td>\n","      <td>1.575388</td>\n","      <td>105.197148</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.901812</td>\n","      <td>0.806303</td>\n","      <td>128.252986</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>49.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>70.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>112.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.000000</td>\n","      <td>3.000000</td>\n","      <td>2912.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9da42c8c-2289-4387-aba7-43392ae13290')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9da42c8c-2289-4387-aba7-43392ae13290 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9da42c8c-2289-4387-aba7-43392ae13290');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"BQEP9bgncSvQ","executionInfo":{"status":"ok","timestamp":1654217776469,"user_tz":300,"elapsed":441,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":497},"outputId":"1ee8faf3-f15d-41ba-d11b-d1988f658c01"},"source":["# Create boxplot before replacing the missing values in the identified column(s).\n","plt.figure(figsize=(21,7))\n","sns.boxplot(df['balcony'])\n","plt.show()"],"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1512x504 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"PAKLykzD50Y9"},"source":["**Hint**: You can create a boxplot column by passing the column name `balcony` and the DataFrame inside the `boxplot()` function."]},{"cell_type":"code","metadata":{"id":"MQ5aNUKyo_BR","executionInfo":{"status":"ok","timestamp":1654217776470,"user_tz":300,"elapsed":11,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9f54dc60-9ba7-4fe6-8b68-950bfd07d250"},"source":["# Computing the modal value in the 'balcony' column using the 'mode()' function.\n","modal_value=df['balcony'].mode()\n","modal_value"],"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    2.0\n","dtype: float64"]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","metadata":{"id":"Hz3AKCAmjqi5"},"source":["**Q:** What should be the replacement value and why?\n","\n","**A:** 2 should be the replacment value because it is the average number so it is fair to assume it will have around those many balconys"]},{"cell_type":"markdown","metadata":{"id":"sjrqo38UCvl4"},"source":["Now, let's replace the missing values with the appropriate replacement value. But first, create a list of row indices of the rows containing the missing values in the identified column(s)."]},{"cell_type":"code","metadata":{"id":"ZAHyNLzv1IBg","executionInfo":{"status":"ok","timestamp":1654217776471,"user_tz":300,"elapsed":10,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Create a list of indices of the rows containing the missing values in the identified column(s).\n","row_indices = df[df['balcony'].isnull() == True].index"],"execution_count":47,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tsXd1Tvp6pNY"},"source":["**Hint**: You can get the indices of the rows with missing values by using the `index` keyword on top of the `isnull()` function.\n","\n","**Syntax**: `row_indices = df[df['col_name'].isnull() == True].index`"]},{"cell_type":"code","metadata":{"id":"Ho33d7MV29wp","executionInfo":{"status":"ok","timestamp":1654217776868,"user_tz":300,"elapsed":406,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":424},"outputId":"efacc0a1-66c5-40d7-d197-520bf462c61e"},"source":["# Replace the missing values in the 'balcony' with the appropriate value.\n","df.loc[row_indices, 'balcony'] = 2.0\n","df.loc[row_indices, :]"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  area_type   availability       size total_sqft  bath  \\\n","6      Super built-up  Area         18-May      4 BHK       2732   4.0   \n","7      Super built-up  Area  Ready To Move      4 BHK       3300   4.0   \n","34           Built-up  Area  Ready To Move      3 BHK       1925   3.0   \n","40           Built-up  Area  Ready To Move      2 BHK       1296   2.0   \n","146    Super built-up  Area  Ready To Move      3 BHK       1828   3.0   \n","...                     ...            ...        ...        ...   ...   \n","13247            Plot  Area  Ready To Move  4 Bedroom       1200   5.0   \n","13279            Plot  Area  Ready To Move  6 Bedroom       1200   5.0   \n","13306            Plot  Area  Ready To Move  4 Bedroom       1200   5.0   \n","13309  Super built-up  Area  Ready To Move      3 BHK       1675   3.0   \n","13316  Super built-up  Area  Ready To Move      4 BHK       3600   5.0   \n","\n","       balcony   price  \n","6          2.0  204.00  \n","7          2.0  600.00  \n","34         2.0  125.00  \n","40         2.0   81.00  \n","146        2.0  110.00  \n","...        ...     ...  \n","13247      2.0  325.00  \n","13279      2.0  130.00  \n","13306      2.0  325.00  \n","13309      2.0   92.13  \n","13316      2.0  400.00  \n","\n","[428 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-89de4d24-c24f-4dc5-98e6-1cb1aafe1f53\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>size</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>Super built-up  Area</td>\n","      <td>18-May</td>\n","      <td>4 BHK</td>\n","      <td>2732</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>204.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 BHK</td>\n","      <td>3300</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>600.00</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1925</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>125.00</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>2 BHK</td>\n","      <td>1296</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>81.00</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1828</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>110.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13247</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 Bedroom</td>\n","      <td>1200</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>325.00</td>\n","    </tr>\n","    <tr>\n","      <th>13279</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>6 Bedroom</td>\n","      <td>1200</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>130.00</td>\n","    </tr>\n","    <tr>\n","      <th>13306</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 Bedroom</td>\n","      <td>1200</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>325.00</td>\n","    </tr>\n","    <tr>\n","      <th>13309</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1675</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>92.13</td>\n","    </tr>\n","    <tr>\n","      <th>13316</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 BHK</td>\n","      <td>3600</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>400.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>428 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89de4d24-c24f-4dc5-98e6-1cb1aafe1f53')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-89de4d24-c24f-4dc5-98e6-1cb1aafe1f53 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-89de4d24-c24f-4dc5-98e6-1cb1aafe1f53');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","metadata":{"id":"XPIBm3dDOA1G"},"source":["**Hint**: You can replace the missing values with the appropriate value by passing the `row_indices` inside the `loc[]` function.\n","\n","**Syntax**: `df.loc[row_indices, 'column_name'] = modal_value`"]},{"cell_type":"code","metadata":{"id":"G_ZTEOIn3TZU","executionInfo":{"status":"ok","timestamp":1654217776870,"user_tz":300,"elapsed":18,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"8ed7ce4c-a876-4718-e01b-d69f77896af7"},"source":["# Display the first 5 rows of the DataFrame, after replacing the missing values in the identified column(s).\n","df.head()"],"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              area_type   availability       size total_sqft  bath  balcony  \\\n","0  Super built-up  Area         19-Dec      2 BHK       1056   2.0      1.0   \n","1            Plot  Area  Ready To Move  4 Bedroom       2600   5.0      3.0   \n","2        Built-up  Area  Ready To Move      3 BHK       1440   2.0      3.0   \n","3  Super built-up  Area  Ready To Move      3 BHK       1521   3.0      1.0   \n","4  Super built-up  Area  Ready To Move      2 BHK       1200   2.0      1.0   \n","\n","    price  \n","0   39.07  \n","1  120.00  \n","2   62.00  \n","3   95.00  \n","4   51.00  "],"text/html":["\n","  <div id=\"df-92fd80f7-6f51-487f-9e3c-ceecacbaf896\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>size</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Super built-up  Area</td>\n","      <td>19-Dec</td>\n","      <td>2 BHK</td>\n","      <td>1056</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>39.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 Bedroom</td>\n","      <td>2600</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>120.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1440</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>62.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1521</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>95.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>2 BHK</td>\n","      <td>1200</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>51.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92fd80f7-6f51-487f-9e3c-ceecacbaf896')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-92fd80f7-6f51-487f-9e3c-ceecacbaf896 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-92fd80f7-6f51-487f-9e3c-ceecacbaf896');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"2fCfJyU53dEc","executionInfo":{"status":"ok","timestamp":1654217776873,"user_tz":300,"elapsed":19,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ab670540-2ec4-42ab-d800-8a0119f81eb2"},"source":["# Check for the missing values again.\n","print(df.loc[df['balcony'].isnull() == True, :].shape[0]*100/12731)"],"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["0.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"oVmLppjg87tI"},"source":["**Q:** Are there any more missing values in the DataFrame? Write yes or no. Also, write down the next steps that you will take to ensure that the replacement does not drastically affect the trend of values in the identified column(s).\n","\n","**A:** I would create a graph and compare the change, if it is extremly drastic then I would change it back and try median instead"]},{"cell_type":"code","metadata":{"id":"8y6KkSkt4RJ6","executionInfo":{"status":"ok","timestamp":1654217777473,"user_tz":300,"elapsed":612,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":497},"outputId":"e3c29584-ccfe-465a-b203-71205dedcbff"},"source":["# Create a box plot after replacing the missing values using the 'boxplot()' function.\n","plt.figure(figsize=(21,7))\n","sns.boxplot(df['balcony'])\n","plt.show()"],"execution_count":51,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1512x504 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"nyahb71o9zZm","executionInfo":{"status":"ok","timestamp":1654217777474,"user_tz":300,"elapsed":21,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":300},"outputId":"095ddd63-5df6-4bd6-9596-9e05f8f0577c"},"source":["# Get the descriptive statistics.\n","df.describe()"],"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               bath       balcony         price\n","count  12731.000000  12731.000000  12731.000000\n","mean       2.512214      1.589663    105.197148\n","std        0.901812      0.796319    128.252986\n","min        1.000000      0.000000      8.000000\n","25%        2.000000      1.000000     49.000000\n","50%        2.000000      2.000000     70.000000\n","75%        3.000000      2.000000    112.000000\n","max        5.000000      3.000000   2912.000000"],"text/html":["\n","  <div id=\"df-dcfc3578-5a57-494c-963c-2e5ccc19fd0a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>12731.000000</td>\n","      <td>12731.000000</td>\n","      <td>12731.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.512214</td>\n","      <td>1.589663</td>\n","      <td>105.197148</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.901812</td>\n","      <td>0.796319</td>\n","      <td>128.252986</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>49.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>70.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>112.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.000000</td>\n","      <td>3.000000</td>\n","      <td>2912.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcfc3578-5a57-494c-963c-2e5ccc19fd0a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dcfc3578-5a57-494c-963c-2e5ccc19fd0a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dcfc3578-5a57-494c-963c-2e5ccc19fd0a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","metadata":{"id":"ooHvxT8J4hWM"},"source":["**Q:** Do you see any drastic change in the trend of the values in the identified column(s)? Write either yes or no. Justify your answer as well.\n","\n","**A:** "]},{"cell_type":"markdown","metadata":{"id":"SRpnUawFtXF4"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"Bq3vondErR2b"},"source":["#### 7 Convert Data-Types\n","\n","The values in the `bath` and `balcony` columns are whole numbers and should be of integer data type.\n","\n"," Hence you need to convert the values in the `bath` and `balcony` columns to integer values."]},{"cell_type":"code","metadata":{"id":"EZT7SxIQqQft","executionInfo":{"status":"ok","timestamp":1654217777476,"user_tz":300,"elapsed":16,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Convert the values in the 'bath' and 'balcony' columns to integer values using the 'astype()' function.\n","df['bath'] = df['bath'].astype(int)\n","df['balcony'] = df['balcony'].astype(int)"],"execution_count":53,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WMifAFGdQPB4"},"source":["**Syntax**: `df['column_name'] = df['column_name'].astype('int')`"]},{"cell_type":"code","metadata":{"id":"02Blf5APsIUV","executionInfo":{"status":"ok","timestamp":1654217797135,"user_tz":300,"elapsed":301,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":424},"outputId":"06b98d32-4beb-412f-d839-23ce1f8dc0d4"},"source":["# Print the data-types of the values in the 'bath' and 'balcony' columns.\n","df"],"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  area_type   availability       size total_sqft  bath  \\\n","0      Super built-up  Area         19-Dec      2 BHK       1056     2   \n","1                Plot  Area  Ready To Move  4 Bedroom       2600     5   \n","2            Built-up  Area  Ready To Move      3 BHK       1440     2   \n","3      Super built-up  Area  Ready To Move      3 BHK       1521     3   \n","4      Super built-up  Area  Ready To Move      2 BHK       1200     2   \n","...                     ...            ...        ...        ...   ...   \n","13315        Built-up  Area  Ready To Move  5 Bedroom       3453     4   \n","13316  Super built-up  Area  Ready To Move      4 BHK       3600     5   \n","13317        Built-up  Area  Ready To Move      2 BHK       1141     2   \n","13318  Super built-up  Area         18-Jun      4 BHK       4689     4   \n","13319  Super built-up  Area  Ready To Move      1 BHK        550     1   \n","\n","       balcony   price  \n","0            1   39.07  \n","1            3  120.00  \n","2            3   62.00  \n","3            1   95.00  \n","4            1   51.00  \n","...        ...     ...  \n","13315        0  231.00  \n","13316        2  400.00  \n","13317        1   60.00  \n","13318        1  488.00  \n","13319        1   17.00  \n","\n","[12731 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-3839d67e-0a48-44dc-a1e9-778decafabde\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>size</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Super built-up  Area</td>\n","      <td>19-Dec</td>\n","      <td>2 BHK</td>\n","      <td>1056</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>39.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 Bedroom</td>\n","      <td>2600</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>120.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1440</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>62.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1521</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>95.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>2 BHK</td>\n","      <td>1200</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>51.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13315</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>5 Bedroom</td>\n","      <td>3453</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>231.00</td>\n","    </tr>\n","    <tr>\n","      <th>13316</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 BHK</td>\n","      <td>3600</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>13317</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>2 BHK</td>\n","      <td>1141</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>60.00</td>\n","    </tr>\n","    <tr>\n","      <th>13318</th>\n","      <td>Super built-up  Area</td>\n","      <td>18-Jun</td>\n","      <td>4 BHK</td>\n","      <td>4689</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>488.00</td>\n","    </tr>\n","    <tr>\n","      <th>13319</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>1 BHK</td>\n","      <td>550</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>17.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12731 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3839d67e-0a48-44dc-a1e9-778decafabde')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3839d67e-0a48-44dc-a1e9-778decafabde button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3839d67e-0a48-44dc-a1e9-778decafabde');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","metadata":{"id":"RYeY1a3Stphf","executionInfo":{"status":"ok","timestamp":1654217859635,"user_tz":300,"elapsed":276,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"f43623fd-d903-4ed9-e7c0-37b1b4c0c7b5"},"source":["# Display the first 5 rows of the DataFrame.\n","df.head()"],"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              area_type   availability       size total_sqft  bath  balcony  \\\n","0  Super built-up  Area         19-Dec      2 BHK       1056     2        1   \n","1            Plot  Area  Ready To Move  4 Bedroom       2600     5        3   \n","2        Built-up  Area  Ready To Move      3 BHK       1440     2        3   \n","3  Super built-up  Area  Ready To Move      3 BHK       1521     3        1   \n","4  Super built-up  Area  Ready To Move      2 BHK       1200     2        1   \n","\n","    price  \n","0   39.07  \n","1  120.00  \n","2   62.00  \n","3   95.00  \n","4   51.00  "],"text/html":["\n","  <div id=\"df-932c5bd1-bce0-4941-ad13-d7a4dbd47391\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_type</th>\n","      <th>availability</th>\n","      <th>size</th>\n","      <th>total_sqft</th>\n","      <th>bath</th>\n","      <th>balcony</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Super built-up  Area</td>\n","      <td>19-Dec</td>\n","      <td>2 BHK</td>\n","      <td>1056</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>39.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Plot  Area</td>\n","      <td>Ready To Move</td>\n","      <td>4 Bedroom</td>\n","      <td>2600</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>120.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1440</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>62.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>3 BHK</td>\n","      <td>1521</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>95.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Super built-up  Area</td>\n","      <td>Ready To Move</td>\n","      <td>2 BHK</td>\n","      <td>1200</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>51.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-932c5bd1-bce0-4941-ad13-d7a4dbd47391')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-932c5bd1-bce0-4941-ad13-d7a4dbd47391 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-932c5bd1-bce0-4941-ad13-d7a4dbd47391');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","metadata":{"id":"hJ0MOdy_4QCU"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"D6prWXBUd1mH"},"source":["### Submitting the Project\n","\n","Follow the steps described below to submit the project.\n","\n","1. After finishing the project, click on the **Share** button on the top right corner of the notebook. A new dialog box will appear.\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/2_share_button.png' width=500>\n","\n","2. In the dialog box, click on the **Copy link** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/3_copy_link.png' width=500>\n","\n","\n","3. The link of the duplicate copy (named as **YYYY-MM-DD_StudentName_CapstoneProject6**) of the notebook will get copied \n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/4_copy_link_confirmation.png' width=500>\n","\n","4. Go to your dashboard and click on the **My Projects** option.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/5_student_dashboard.png' width=800>\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/6_my_projects.png' width=800>\n","\n","5. Click on the **View Project** button for the project you want to submit.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/7_view_project.png' width=800>\n","\n","6. Click on the **Submit Project Here** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/8_submit_project.png' width=800>\n","\n","7. Paste the link to the project file named as **YYYY-MM-DD_StudentName_CapstoneProject6** in the URL box and then click on the **Submit** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/9_enter_project_url.png' width=800>\n"]},{"cell_type":"markdown","metadata":{"id":"7Dx4UxK3d0mQ"},"source":["---"]}]}