{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Es_u-8opC2RM5MyEzJZHjhrfLXkFWBAr","timestamp":1673922769345},{"file_id":"1fOHp8CVHVpnhtwRgmJS0LHbqbS2PoYb8","timestamp":1601993253519},{"file_id":"1dWEN7HK_CoqLnNqGjIVQCBdBbbUb11s0","timestamp":1600868770193}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"aQIDTCSIwTP3"},"source":["### Instructions"]},{"cell_type":"markdown","metadata":{"id":"F_IP6BNb3Ne1"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"azReToS7wWX3"},"source":["#### Goal of the Project\n","\n","This project is designed for you to practice and solve the activities that are based on the concepts covered in the following lessons:\n","\n"," 1. Multiple linear regression - Introduction\n"," \n"," "]},{"cell_type":"markdown","metadata":{"id":"llwKuOyIwnA_"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"7rayXczfQ0tP"},"source":["#### Getting Started:\n","\n","1. Click on this link to open the Colab file for this project.\n","\n"," https://colab.research.google.com/drive/1Es_u-8opC2RM5MyEzJZHjhrfLXkFWBAr\n","\n","2. Create a duplicate copy of the Colab file as described below.\n","\n","  - Click on the **File menu**. A new drop-down list will appear.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/lesson-0/0_file_menu.png' width=500>\n","\n","  - Click on the **Save a copy in Drive** option. A duplicate copy will get created. It will open up in the new tab on your web browser.\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/lesson-0/1_create_colab_duplicate_copy.png' width=500>\n","\n","3. After creating the duplicate copy of the notebook, please rename it in the **YYYY-MM-DD_StudentName_Project62** format.\n","\n","4. Now, write your code in the prescribed code cells.\n"]},{"cell_type":"markdown","metadata":{"id":"SCx1j8NZQ7UU"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"fR_SN7K6475D"},"source":["### Problem Statement\n","\n","A real estate company wishes to analyse the prices of properties based on various factors such as area, number of rooms, bathrooms, bedrooms, etc. Create a multiple linear regression model which is capable of predicting the sale price of houses based on multiple factors and evaluate the accuracy of this model.\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"lN1iCMJ4Oy1N"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"L3zN-iv-wpjm"},"source":["### List of Activities\n","\n","**Activity 1:** Analysing the Dataset\n","\n","**Activity 2:** Data Preparation\n","  \n","**Activity 3:** Train-Test Split\n","\n","**Activity 4:**  Model Training\n","\n","**Activity 5:** Model Prediction and Evaluation\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"jLudEnlPO0FF"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"lZt4yKiJwrUs"},"source":["\n","#### Activity 1:  Analysing the Dataset\n","\n","- Create a Pandas DataFrame for **Housing** dataset using the below link. This dataset consists of following columns:\n","\n","\n","|Field|Description|\n","|---:|:---|\n","|price|Sale price of a house in INR|\n","|area|Total size of a property in square feet|\n","|bedrooms|Number of bedrooms|\n","|bathrooms|Number of bathrooms|\n","|storeys|Number of storeys excluding basement|\n","|mainroad|yes, if the house faces a main road|\n","|livingroom|yes, if the house has a separate living room or a drawing room for guests|\n","|basement|yes, if the house has a basement|\n","|hotwaterheating|yes, if the house uses gas for hot water heating|\n","|airconditioning|yes, if there is central air conditioning|\n","|parking|number of cars that can be parked|\n","|prefarea|yes, if the house is located in the preferred neighbourhood of the city|\n","\n","\n","  **Dataset Link:** https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/house-prices.csv\n","\n","- Print the first five rows of the dataset. Check for null values and treat them accordingly.\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"6U6NaAy4WQgs","colab":{"base_uri":"https://localhost:8080/","height":250},"executionInfo":{"status":"ok","timestamp":1674524874473,"user_tz":360,"elapsed":157,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"50932cf9-d4e2-4642-b0b3-814de6c40412"},"source":["# Import modules\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error\n","# Load the dataset\n","df = pd.read_csv('https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/house-prices.csv')\n","# Dataset Link: 'https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/house-prices.csv'\n","\n","# Print first five rows using head() function\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      price  area  bedrooms  bathrooms  stories mainroad guestroom basement  \\\n","0  13300000  7420         4          2        3      yes        no       no   \n","1  12250000  8960         4          4        4      yes        no       no   \n","2  12250000  9960         3          2        2      yes        no      yes   \n","3  12215000  7500         4          2        2      yes        no      yes   \n","4  11410000  7420         4          1        2      yes       yes      yes   \n","\n","  hotwaterheating airconditioning  parking prefarea furnishingstatus  \n","0              no             yes        2      yes        furnished  \n","1              no             yes        3       no        furnished  \n","2              no              no        2      yes   semi-furnished  \n","3              no             yes        3      yes        furnished  \n","4              no             yes        2       no        furnished  "],"text/html":["\n","  <div id=\"df-4239619a-2189-4995-b90e-5f7f91804d6b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>area</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>stories</th>\n","      <th>mainroad</th>\n","      <th>guestroom</th>\n","      <th>basement</th>\n","      <th>hotwaterheating</th>\n","      <th>airconditioning</th>\n","      <th>parking</th>\n","      <th>prefarea</th>\n","      <th>furnishingstatus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13300000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12250000</td>\n","      <td>8960</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12250000</td>\n","      <td>9960</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>semi-furnished</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12215000</td>\n","      <td>7500</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11410000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>furnished</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4239619a-2189-4995-b90e-5f7f91804d6b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4239619a-2189-4995-b90e-5f7f91804d6b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4239619a-2189-4995-b90e-5f7f91804d6b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"jg7hAMJ4jKC5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674524874678,"user_tz":360,"elapsed":24,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"00613b19-3a05-4696-a2b0-d033f423c96c"},"source":["# Check if there are any null values. If any column has null values, treat them accordingly\n","df.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["price               0\n","area                0\n","bedrooms            0\n","bathrooms           0\n","stories             0\n","mainroad            0\n","guestroom           0\n","basement            0\n","hotwaterheating     0\n","airconditioning     0\n","parking             0\n","prefarea            0\n","furnishingstatus    0\n","dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"T2b18ifmveiZ"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"UjFIAaX0ocao"},"source":["#### Activity 2: Data Preparation\n","\n","This dataset contains many columns having categorical data i.e. values 'Yes' or 'No'. However for linear regression, we need numerical data. So you need to convert all 'Yes' and 'No' values to 1s and 0s, where \n","- 1 means 'Yes'\n","- 0 means 'No'\n","\n","Similarly, replace\n","\n","- `unfurnished` with 0\n","- `semi-furnished` with 1\n","- `furnished` with 2\n","\n","**Hint:** To replace all 'Yes' values with 1 and 'No' values with 0, use `replace()` function of the DataFrame object. \n","\n","For ex: `df.replace(to_replace=\"yes\", value=1, inplace=True)` $\\Rightarrow$ replaces the \"yes\" values in all columns with 1. If you need to make changes inplace, use `inplace` boolean argument.\n","\n"]},{"cell_type":"code","metadata":{"id":"J7cl2qj-Vv8H"},"source":["# Replace all the non-numeric values with numeric values.\n","df.replace(to_replace=\"yes\", value=1, inplace=True)\n","df.replace(to_replace=\"no\", value=0, inplace=True)\n","df.replace(to_replace=\"unfurnished\", value=0, inplace=True)\n","df.replace(to_replace=\"semi-furnished\", value=1, inplace=True)\n","df.replace(to_replace=\"furnished\", value=2, inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uG9YxYbpjgVG"},"source":["---"]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":250},"id":"8h1B31PXlEm6","executionInfo":{"status":"ok","timestamp":1674524874681,"user_tz":360,"elapsed":24,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"1c9c95cb-86d3-4b21-ae3b-594035ca5d68"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      price  area  bedrooms  bathrooms  stories  mainroad  guestroom  \\\n","0  13300000  7420         4          2        3         1          0   \n","1  12250000  8960         4          4        4         1          0   \n","2  12250000  9960         3          2        2         1          0   \n","3  12215000  7500         4          2        2         1          0   \n","4  11410000  7420         4          1        2         1          1   \n","\n","   basement  hotwaterheating  airconditioning  parking  prefarea  \\\n","0         0                0                1        2         1   \n","1         0                0                1        3         0   \n","2         1                0                0        2         1   \n","3         1                0                1        3         1   \n","4         1                0                1        2         0   \n","\n","   furnishingstatus  \n","0                 2  \n","1                 2  \n","2                 1  \n","3                 2  \n","4                 2  "],"text/html":["\n","  <div id=\"df-bdf17008-343d-4687-9b16-c96a8e48daee\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>area</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>stories</th>\n","      <th>mainroad</th>\n","      <th>guestroom</th>\n","      <th>basement</th>\n","      <th>hotwaterheating</th>\n","      <th>airconditioning</th>\n","      <th>parking</th>\n","      <th>prefarea</th>\n","      <th>furnishingstatus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13300000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12250000</td>\n","      <td>8960</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12250000</td>\n","      <td>9960</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12215000</td>\n","      <td>7500</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11410000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdf17008-343d-4687-9b16-c96a8e48daee')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bdf17008-343d-4687-9b16-c96a8e48daee button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bdf17008-343d-4687-9b16-c96a8e48daee');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"uDTmlU-Mz0fI"},"source":["#### Activity 3: Train-Test Split\n","\n","You need to predict the house prices based on several factors. Thus, `price` is the target variable and other columns except `price` will be feature variables.\n","\n","Split the dataset into training set and test set such that the training set contains 67% of the instances and the remaining instances will become the test set."]},{"cell_type":"code","source":["feature_list = list(df.columns.values[1:-1])\n","print(feature_list)"],"metadata":{"id":"9AUusKfidWkF","executionInfo":{"status":"ok","timestamp":1674524874681,"user_tz":360,"elapsed":21,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"8ad544d4-7788-4723-f8b2-0483afbca7fa","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['area', 'bedrooms', 'bathrooms', 'stories', 'mainroad', 'guestroom', 'basement', 'hotwaterheating', 'airconditioning', 'parking', 'prefarea']\n"]}]},{"cell_type":"code","metadata":{"id":"Ku_loAWZ0LXr"},"source":["# Split the DataFrame into the training and test sets.\n","feature_list = list(df.columns.values[1:-1])\n","x = df[feature_list]\n","y = df['price']\n","x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.33,random_state=42)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hCPg7ClP0Om1"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"ud8dLfCGjh0E"},"source":["#### Activity 4: Model Training\n","\n","Implement multiple linear regression using `sklearn` module in the following way:\n","\n","1. Reshape the target variable array into two-dimensional arrays by using `reshape(-1, 1)` function of the numpy module.\n","2. Deploy the model by importing the `LinearRegression` class and create an object of this class.\n","3. Call the `fit()` function on the LinearRegression object."]},{"cell_type":"code","metadata":{"id":"Xost35Q1XreI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674524874855,"user_tz":360,"elapsed":185,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"72711eb4-f749-4647-ea6a-44ab953ca426"},"source":["# Create two-dimensional NumPy arrays for the target variable \n","y_train_reshaped = y_train.values.reshape(-1,1)\n","y_test_reshaped = y_test.values.reshape(-1,1)\n","\n","\n","# Build linear regression model \n","model = LinearRegression()\n","\n","# Print the value of the intercept \n","model.fit(x_train, y_train_reshaped)\n","intercept = model.intercept_\n","print(f'the intercept of the line is {model.intercept_[0]}')\n","slope=model.coef_\n","# Print the names of the features along with the values of their corresponding coefficients.\n","print('Names of features and their corresponding coefficients')\n","for i in range(len(feature_list)):\n","  print(feature_list[i],': ', slope[0][i], '\\n')\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the intercept of the line is -230797.8185174279\n","Names of features and their corresponding coefficients\n","area :  252.74190153064856 \n","\n","bedrooms :  99525.89859410445 \n","\n","bathrooms :  1132688.6894603525 \n","\n","stories :  414361.566065939 \n","\n","mainroad :  458206.3753303046 \n","\n","guestroom :  339809.57305214717 \n","\n","basement :  518163.65271511185 \n","\n","hotwaterheating :  645620.7904595259 \n","\n","airconditioning :  698145.6458023346 \n","\n","parking :  308089.73272037157 \n","\n","prefarea :  533164.4687235687 \n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"cAPgWR45mrCo"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"CvcLZdremtHY"},"source":["#### Activity 5: Model Prediction and Evaluation\n","\n","Predict the values for both training and test sets by calling the `predict()` function on the LinearRegression object. Also, calculate the $R^2$, MSE, RMSE and MAE values to evaluate the accuracy of your model."]},{"cell_type":"code","metadata":{"id":"nktWlDysyJyR"},"source":["# Predict the target variable values for training and test set\n","y_train_pred = model.predict(x_train)\n","y_test_pred = model.predict(x_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hc3RPNgsX5-0","executionInfo":{"status":"ok","timestamp":1674524874856,"user_tz":360,"elapsed":5,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e4da8f5d-4823-443b-e67d-59f9b4e51452"},"source":["# Evaluate the linear regression model using the 'r2_score', 'mean_squared_error' & 'mean_absolute_error' functions of the 'sklearn' module.\n","print(f\"Train Set\\n\")\n","print(f\"R-squared: {r2_score(y_train_reshaped, y_train_pred)}:.3f\")\n","print(f\"Mean Squared Error: {mean_squared_error(y_train_reshaped, y_train_pred):.3f}\")\n","print(f\"Root Mean Squared Error: {np.sqrt(mean_squared_error(y_train_reshaped, y_train_pred)):.3f}\")\n","print(f\"Mean Absolute Error: {mean_absolute_error(y_train_reshaped, y_train_pred):.3f}\")\n","      \n","print(f\"\\nTest Set\\n\")\n","print(f\"R-squared: {r2_score(y_test_reshaped, y_test_pred):.3f}\")\n","print(f\"Mean Squared Error: {mean_squared_error(y_test_reshaped, y_test_pred):.3f}\")\n","print(f\"Root Mean Squared Error: {np.sqrt(mean_squared_error(y_test_reshaped, y_test_pred)):.3f}\")\n","print(f\"Mean Absolute Error: {mean_absolute_error(y_test_reshaped, y_test_pred):.3f}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train Set\n","\n","R-squared: 0.6791952875397154:.3f\n","Mean Squared Error: 993123574254.811\n","Root Mean Squared Error: 996555.856\n","Mean Absolute Error: 737386.700\n","\n","Test Set\n","\n","R-squared: 0.649\n","Mean Squared Error: 1503987779975.026\n","Root Mean Squared Error: 1226371.795\n","Mean Absolute Error: 902928.260\n"]}]},{"cell_type":"markdown","metadata":{"id":"Bp0p4IT-Dn_w"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"cndl2TXbR7F9"},"source":["### Submitting the Project:\n","\n","1. After finishing the project, click on the **Share** button on the top right corner of the notebook. A new dialog box will appear.\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/2_share_button.png' width=500>\n","\n","2. In the dialog box, make sure that '**Anyone on the Internet with this link can view**' option is selected and then click on the **Copy link** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/3_copy_link.png' width=500>\n","\n","3. The link of the duplicate copy (named as **YYYY-MM-DD_StudentName_Project62**) of the notebook will get copied \n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/4_copy_link_confirmation.png' width=500>\n","\n","4. Go to your dashboard and click on the **My Projects** option.\n","   \n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/5_student_dashboard.png' width=800>\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/6_my_projects.png' width=800>\n","\n","5. Click on the **View Project** button for the project you want to submit.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/7_view_project.png' width=800>\n","\n","6. Click on the **Submit Project Here** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/8_submit_project.png' width=800>\n","\n","7. Paste the link to the project file named as **YYYY-MM-DD_StudentName_Project62** in the URL box and then click on the **Submit** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/9_enter_project_url.png' width=800> "]},{"cell_type":"markdown","metadata":{"id":"CH4sKMzKSBBW"},"source":["---"]}]}