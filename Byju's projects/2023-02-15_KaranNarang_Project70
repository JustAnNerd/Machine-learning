{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1652FnxXEMT1dfXwJ5jVOrY61xG3CO_BG","timestamp":1676343257236}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"aQIDTCSIwTP3"},"source":["### Instructions"]},{"cell_type":"markdown","metadata":{"id":"F_IP6BNb3Ne1"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"azReToS7wWX3"},"source":["#### Goal of the Project\n","\n","This project is designed for you to practice and solve the activities that are based on the concepts covered in the following lesson:\n","\n"," 1. Multiple linear regression - Introduction\n"," 2. Multicollinearity\n"," 3. Variance Inflation Factor\n"," 4. Car Price Prediction - RFE\n"," \n"," "]},{"cell_type":"markdown","metadata":{"id":"llwKuOyIwnA_"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"jrWg-BM0F4ZX"},"source":["#### Getting Started:\n","\n","1. Click on this link to open the Colab file for this project.\n","\n","    https://colab.research.google.com/drive/1652FnxXEMT1dfXwJ5jVOrY61xG3CO_BG\n","\n","2. Create a duplicate copy of the Colab file as described below.\n","\n","  - Click on the **File menu**. A new drop-down list will appear.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/lesson-0/0_file_menu.png' width=500>\n","\n","  - Click on the **Save a copy in Drive** option. A duplicate copy will get created. It will open up in the new tab on your web browser.\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/lesson-0/1_create_colab_duplicate_copy.png' width=500>\n","\n","3. After creating the duplicate copy of the notebook, please rename it in the **YYYY-MM-DD_StudentName_Project70** format.\n","\n","4. Now, write your code in the prescribed code cells.\n"]},{"cell_type":"markdown","metadata":{"id":"6cwOPR4kGBCl"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"fR_SN7K6475D"},"source":["### Problem Statement\n","\n","Many of your friends may be worried about their chances of getting admission in their dream university for pursuing MS. So, you decided to help them by building a model which is capable of predicting their chance of getting admission in their dream masters program. This model should also help them in understanding which factors are important in MS admissions and what are the scores required for different tests to have better admission chances.\n","\n","Build a prediction model using multiple linear regression to predict the likelihood of getting admission and evaluate the accuracy of the model.\n","If there is multicollinearity in the dataset, apply RFE to eliminate redundant features and validate the selected features using VIF.\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"lN1iCMJ4Oy1N"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"L3zN-iv-wpjm"},"source":["### List of Activities\n","\n","**Activity 1:** Analyse the Dataset\n","\n","**Activity 2:** Find Correlation\n","  \n","**Activity 3:** Train-Test Split\n","\n","**Activity 4:** Train the Model\n","\n","**Activity 5:** Determine Highly Correlated Features\n","\n","**Activity 6:** Perform RFE\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"jLudEnlPO0FF"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"lZt4yKiJwrUs"},"source":["\n","#### Activity 1:  Analyse the Dataset\n","\n","- Create a Pandas DataFrame for **Admission_Predict** dataset using the below link. This dataset consists of several parameters which are considered important during the application for Masters program:\n","\n","\n","|Field|Description|\n","|---:|:---|\n","|Serial No.|Serial No.|\n","|GRE Score|GRE Scores ( out of 340 )|\n","|TOEFL Score|TOEFL Scores ( out of 120 )|\n","|University Rating|University Rating ( out of 5 )|\n","|SOP|Statement of Purpose Strength ( out of 5 )|\n","|LOR|Letter of Recommendation Strength ( out of 5 )|\n","|CGPA|Undergraduate GPA ( out of 10 )|\n","|Research|Research Experience ( either 0 or 1 )|\n","|Chance of Admit|Chance of Admit ( ranging from 0 to 1 )|\n","\n","\n","\n","  **Dataset Link:** https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/Admission_Predict.csv\n","\n","- Print the first five rows of the dataset. Check for null values and treat them accordingly.\n","\n","- Also drop the column `Serial No.` from the dataset as it is of no use for analysis. Check whether the column names contain any trailing and leading spaces. If yes, remove the whitespaces from the column names.\n","\n","**Hint:** You can use `strip()` and `rename()` functions to remove unwanted whitespaces from the column name and to rename them.\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"6U6NaAy4WQgs","executionInfo":{"status":"ok","timestamp":1676503946936,"user_tz":360,"elapsed":2560,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"fdd43e50-eb2f-4e8c-bb83-ec9296a0a77f","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["# Import modules\n","import pandas as pd\n","import numpy as np\n","# Load the dataset\n","df = pd.read_csv('https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/Admission_Predict.csv')\n","# Print first five rows using head() function\n","df.head()"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Serial No.  GRE Score  TOEFL Score  University Rating  SOP  LOR   CGPA  \\\n","0           1        337          118                  4  4.5   4.5  9.65   \n","1           2        324          107                  4  4.0   4.5  8.87   \n","2           3        316          104                  3  3.0   3.5  8.00   \n","3           4        322          110                  3  3.5   2.5  8.67   \n","4           5        314          103                  2  2.0   3.0  8.21   \n","\n","   Research  Chance of Admit   \n","0         1              0.92  \n","1         1              0.76  \n","2         1              0.72  \n","3         1              0.80  \n","4         0              0.65  "],"text/html":["\n","  <div id=\"df-cdb56368-87bf-4554-8656-ee84408a6f39\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Serial No.</th>\n","      <th>GRE Score</th>\n","      <th>TOEFL Score</th>\n","      <th>University Rating</th>\n","      <th>SOP</th>\n","      <th>LOR</th>\n","      <th>CGPA</th>\n","      <th>Research</th>\n","      <th>Chance of Admit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>337</td>\n","      <td>118</td>\n","      <td>4</td>\n","      <td>4.5</td>\n","      <td>4.5</td>\n","      <td>9.65</td>\n","      <td>1</td>\n","      <td>0.92</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>324</td>\n","      <td>107</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>4.5</td>\n","      <td>8.87</td>\n","      <td>1</td>\n","      <td>0.76</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>316</td>\n","      <td>104</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3.5</td>\n","      <td>8.00</td>\n","      <td>1</td>\n","      <td>0.72</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>322</td>\n","      <td>110</td>\n","      <td>3</td>\n","      <td>3.5</td>\n","      <td>2.5</td>\n","      <td>8.67</td>\n","      <td>1</td>\n","      <td>0.80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>314</td>\n","      <td>103</td>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>8.21</td>\n","      <td>0</td>\n","      <td>0.65</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cdb56368-87bf-4554-8656-ee84408a6f39')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cdb56368-87bf-4554-8656-ee84408a6f39 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cdb56368-87bf-4554-8656-ee84408a6f39');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"jg7hAMJ4jKC5","executionInfo":{"status":"ok","timestamp":1676503946938,"user_tz":360,"elapsed":47,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"f05a1d74-73d3-4922-d28c-2f2cca9aad50","colab":{"base_uri":"https://localhost:8080/"}},"source":["# Check if there are any null values. If any column has null values, treat them accordingly\n","df.isnull().sum()"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Serial No.           0\n","GRE Score            0\n","TOEFL Score          0\n","University Rating    0\n","SOP                  0\n","LOR                  0\n","CGPA                 0\n","Research             0\n","Chance of Admit      0\n","dtype: int64"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"v336EVVXm6iQ","executionInfo":{"status":"ok","timestamp":1676503946942,"user_tz":360,"elapsed":44,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"fae0bdc6-ab50-4700-84e9-38d2611b5cb1","colab":{"base_uri":"https://localhost:8080/"}},"source":["# Get the list of columns of the dataset.\n","df.columns"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Serial No.', 'GRE Score', 'TOEFL Score', 'University Rating', 'SOP',\n","       'LOR ', 'CGPA', 'Research', 'Chance of Admit '],\n","      dtype='object')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"41sLPJoVpZcr","executionInfo":{"status":"ok","timestamp":1676503946944,"user_tz":360,"elapsed":36,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Drop 'Serial No.' column from the DataFrame\n","df.drop(columns='Serial No.', axis=1, inplace=True)"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"BY7Qw1PUocOW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676503947194,"user_tz":360,"elapsed":285,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"ac818af5-9a8e-4cad-a12a-6b8eda679387"},"source":["# Remove whitespaces from both ends in the column name if there are any\n","df = df.rename(columns={'LOR ':'LOR', 'Chance of Admit ':'Chance of Admit'})\n","\n","# Get list of all the columns after renaming.\n","df.columns"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['GRE Score', 'TOEFL Score', 'University Rating', 'SOP', 'LOR', 'CGPA',\n","       'Research', 'Chance of Admit'],\n","      dtype='object')"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"T2b18ifmveiZ"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"x68hr50jrUO3"},"source":["#### Activity 2: Find Correlation\n","\n","We need to predict the value of `Chance of Admit` variable, given other variables. Thus, `Chance of Admit` is the target variable and other columns except `Chance of Admit` are the feature variables.\n","\n","Find the columns that are highly correlated with the `Chance of Admit` column. For this, calculate the correlation coefficient values between all the columns and then use a heatmap to visualise these correlations."]},{"cell_type":"code","metadata":{"id":"KMt3ZmmRrcdt","colab":{"base_uri":"https://localhost:8080/","height":324},"executionInfo":{"status":"ok","timestamp":1676504234068,"user_tz":360,"elapsed":1489,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"16cc3fc5-df61-4e92-e5df-bcc5603b0b2a"},"source":["# Calculate correlation coefficient for all columns of the DataFrame\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","# Use heatmap to observe correlations.\n","plt.figure(figsize=(15, 5))\n","sns.heatmap(df.corr(), annot=True)\n","plt.show()"],"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"rDrRu-PsCSxq"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"uDTmlU-Mz0fI"},"source":["#### Activity 3: Train-Test Split\n","\n","\n","Split the dataset into training set and test set such that the training set contains 70% of the instances and the remaining instances will become the test set."]},{"cell_type":"code","metadata":{"id":"Ku_loAWZ0LXr","executionInfo":{"status":"ok","timestamp":1676504471335,"user_tz":360,"elapsed":292,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Split the DataFrame into the training and test sets.\n","from sklearn.model_selection import train_test_split\n","features = list(df.columns)\n","features.remove('Chance of Admit')\n","x = df[features]\n","y = df['Chance of Admit']\n","x = df[features]\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)"],"execution_count":18,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hCPg7ClP0Om1"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"u7bWq9hZHikZ"},"source":["#### Activity 4: Train the Model\n","\n","Now build a multiple linear regression model using the `statsmodels.api` module.\n","Also, print the summary of the linear regression model built."]},{"cell_type":"code","metadata":{"id":"mAAdCmH5g3iQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676504758522,"user_tz":360,"elapsed":125,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"2734228a-fd4a-4513-8b53-4ee182dcb2cd"},"source":["#  Build the linear regression model using all the features \n","import statsmodels.api as sm\n","x_train_sm = sm.add_constant(x_train)\n","linreg = sm.OLS(y_train, x_train_sm).fit()\n","print(linreg.summary())"],"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:        Chance of Admit   R-squared:                       0.798\n","Model:                            OLS   Adj. R-squared:                  0.792\n","Method:                 Least Squares   F-statistic:                     146.6\n","Date:                Wed, 15 Feb 2023   Prob (F-statistic):           1.92e-86\n","Time:                        23:45:45   Log-Likelihood:                 363.95\n","No. Observations:                 268   AIC:                            -711.9\n","Df Residuals:                     260   BIC:                            -683.2\n","Df Model:                           7                                         \n","Covariance Type:            nonrobust                                         \n","=====================================================================================\n","                        coef    std err          t      P>|t|      [0.025      0.975]\n","-------------------------------------------------------------------------------------\n","const                -1.2960      0.157     -8.276      0.000      -1.604      -0.988\n","GRE Score             0.0020      0.001      2.754      0.006       0.001       0.003\n","TOEFL Score           0.0029      0.001      2.228      0.027       0.000       0.005\n","University Rating     0.0055      0.006      0.952      0.342      -0.006       0.017\n","SOP                   0.0006      0.007      0.095      0.924      -0.013       0.014\n","LOR                   0.0151      0.007      2.218      0.027       0.002       0.029\n","CGPA                  0.1163      0.015      7.927      0.000       0.087       0.145\n","Research              0.0160      0.010      1.674      0.095      -0.003       0.035\n","==============================================================================\n","Omnibus:                       74.539   Durbin-Watson:                   2.002\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):              178.405\n","Skew:                          -1.310   Prob(JB):                     1.82e-39\n","Kurtosis:                       6.019   Cond. No.                     1.36e+04\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The condition number is large, 1.36e+04. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n","  x = pd.concat(x[::order], 1)\n"]}]},{"cell_type":"code","metadata":{"id":"rrD285FNg551","executionInfo":{"status":"ok","timestamp":1676503947203,"user_tz":360,"elapsed":45,"user":{"displayName":"Karan","userId":"08865303078637944641"}}},"source":["# Print the summary of the linear regression report.\n","print(linreg.summary())"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ixCTKCOI91Sc"},"source":["**Q:** Does the summary report indicate the presence of multicollinearity?\n","\n","**A:** Yes"]},{"cell_type":"markdown","metadata":{"id":"70EXdGYyEA6g"},"source":["----"]},{"cell_type":"markdown","metadata":{"id":"VMhSApJWaEo9"},"source":["#### Activity 5: Determine Highly Correlated Features\n","\n","Find the moderately to highly correlated features with `Chance of Admit` and the corresponding correlation values."]},{"cell_type":"code","metadata":{"id":"s6IRcUUV-O0A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676504866460,"user_tz":360,"elapsed":131,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"964c2212-4469-4ff4-ce60-30a2c32e53b6"},"source":["# Create a Python dictionary storing the moderately to highly correlated features with 'Chance of Admit' and the corresponding correlation values.\n","corr_dict = {}\n","for i in features:\n","  corr_coef = np.corrcoef(df['Chance of Admit'], df[i])[0, 1]\n","  if (corr_coef>=0.5) or (corr_coef<=-0.5):\n","    corr_dict[i] = corr_coef\n","corr_dict"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'GRE Score': 0.8026104595903499,\n"," 'TOEFL Score': 0.7915939869351049,\n"," 'University Rating': 0.7112502503917218,\n"," 'SOP': 0.6757318583886716,\n"," 'LOR': 0.6698887920106936,\n"," 'CGPA': 0.8732890993553001,\n"," 'Research': 0.5532021370190395}"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"tXMYHchpapai"},"source":["**Q:** How many features are moderately to highly correlated with `Chance of Admit`?\n","\n","**A:** 7\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"dNqsijIENEXD","colab":{"base_uri":"https://localhost:8080/","height":324},"executionInfo":{"status":"ok","timestamp":1676504892092,"user_tz":360,"elapsed":593,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"e784597d-5648-47c2-f0e6-069e92d5bd5f"},"source":["# Create a heatmap to visualise the correlation between the above correlated features (if there exists).\n","plt.figure(figsize=(15, 5))\n","sns.heatmap(x_train[corr_dict.keys()].corr(), annot=True)\n","plt.show()"],"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"sp2kCTaecI4v"},"source":["#### Activity 6: Perform RFE (Recursive Feature Elimination)\n","\n","1. Choose the number of features that you want to use for RFE (choose 3 to 5 features).\n","2. Apply RFE using `sklearn.feature_selection` module.\n","2. Build linear regression model using the best features selected by RFE.\n","3. Validate the significance of the selected features by calculating their VIF values."]},{"cell_type":"code","metadata":{"id":"r31QPTtJNnBq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676508260342,"user_tz":360,"elapsed":371,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"24b53417-9945-4759-b719-58f81255d581"},"source":["# Use RFE to eliminate few features from the dataset.\n","# Import RFE\n","from sklearn.feature_selection import RFE\n","from sklearn.linear_model import LinearRegression\n","# RFE with 3-5 features.\n","skl_lin_reg = LinearRegression()\n","rfe = RFE(skl_lin_reg, n_features_to_select=4)\n","\n","# Fit with selected features.\n","rfe.fit(x_train[corr_dict.keys()], y_train)\n","# Print the 'support_' and 'ranking_' attributes to find out the features selected by RFE\n","print(rfe.support_, \"\\n\")       \n","print(rfe.ranking_) "],"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["[False False  True False  True  True  True] \n","\n","[3 2 1 4 1 1 1]\n"]}]},{"cell_type":"code","metadata":{"id":"RJP_0Am7N-gw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676508275256,"user_tz":360,"elapsed":145,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"68209094-66a9-4598-b5ed-45d185ca8e2d"},"source":["# Print the features selected by RFE in the previous step.\n","rfe_features = x_train[corr_dict.keys()].columns[rfe.support_]\n","rfe_features"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['University Rating', 'LOR', 'CGPA', 'Research'], dtype='object')"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"XfuOHI3KOB51","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676508361994,"user_tz":360,"elapsed":119,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"ba8c85bb-5486-467f-beab-b03a42cdc94f"},"source":["# Build a linear regression model using the 'statsmodels.api' module having the above features selected by RFE.\n","# Import the 'statsmodels.api' module.\n","import statsmodels.api as sm\n","\n","# Subset the train set such that it contains only the above  selected features.\n","x_train_rfe = x_train[rfe_features]\n","\n","# Add the 'const' column to the features set.\n","x_train_rfe = sm.add_constant(x_train_rfe)\n","\n","# Fit the model\n","rfe_linreg = sm.OLS(y_train, x_train_rfe).fit()   \n","print(rfe_linreg.summary())\n","  \n","# Print the summary of the linear regression report\n"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:        Chance of Admit   R-squared:                       0.781\n","Model:                            OLS   Adj. R-squared:                  0.778\n","Method:                 Least Squares   F-statistic:                     234.5\n","Date:                Thu, 16 Feb 2023   Prob (F-statistic):           1.92e-85\n","Time:                        00:45:48   Log-Likelihood:                 353.25\n","No. Observations:                 268   AIC:                            -696.5\n","Df Residuals:                     263   BIC:                            -678.5\n","Df Model:                           4                                         \n","Covariance Type:            nonrobust                                         \n","=====================================================================================\n","                        coef    std err          t      P>|t|      [0.025      0.975]\n","-------------------------------------------------------------------------------------\n","const                -0.7508      0.081     -9.221      0.000      -0.911      -0.590\n","University Rating     0.0127      0.006      2.281      0.023       0.002       0.024\n","LOR                   0.0112      0.006      1.782      0.076      -0.001       0.024\n","CGPA                  0.1612      0.011     14.235      0.000       0.139       0.183\n","Research              0.0284      0.009      3.011      0.003       0.010       0.047\n","==============================================================================\n","Omnibus:                       64.529   Durbin-Watson:                   2.020\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):              134.548\n","Skew:                          -1.195   Prob(JB):                     6.07e-30\n","Kurtosis:                       5.517   Cond. No.                         204.\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n","  x = pd.concat(x[::order], 1)\n"]}]},{"cell_type":"code","metadata":{"id":"VhaQ4xmOOGqC","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1676508398607,"user_tz":360,"elapsed":116,"user":{"displayName":"Karan","userId":"08865303078637944641"}},"outputId":"1706c60b-9302-4eef-cff8-a1ae70817445"},"source":["# Check for the VIF values of the features selected by RFE above. \n","from statsmodels.stats.outliers_influence import variance_inflation_factor\n","\n","# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\n","vif = pd.DataFrame()\n","vif['Features'] = x_train_rfe.columns\n","vif['VIF'] = [variance_inflation_factor(x_train_rfe.values, i) for i in range(x_train_rfe.shape[1])]\n","vif['VIF'] = round(vif['VIF'], 2)\n","vif = vif.sort_values(by = \"VIF\", ascending = False)\n","vif"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Features     VIF\n","0              const  415.79\n","3               CGPA    2.83\n","1  University Rating    2.57\n","2                LOR    2.07\n","4           Research    1.38"],"text/html":["\n","  <div id=\"df-04d76e9e-c6d9-4fd4-b797-f9927589db10\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Features</th>\n","      <th>VIF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>const</td>\n","      <td>415.79</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CGPA</td>\n","      <td>2.83</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>University Rating</td>\n","      <td>2.57</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LOR</td>\n","      <td>2.07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Research</td>\n","      <td>1.38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04d76e9e-c6d9-4fd4-b797-f9927589db10')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-04d76e9e-c6d9-4fd4-b797-f9927589db10 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-04d76e9e-c6d9-4fd4-b797-f9927589db10');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"ElZ5jF11eY4E"},"source":["**Q:** How many features have VIF values above 10?\n","\n","**A:** 1\n","\n","**Q:** What is the $R^2$ value after RFE?\n","\n","**A:** \n"]},{"cell_type":"markdown","metadata":{"id":"HOMn4r_BfFr9"},"source":["----"]},{"cell_type":"markdown","metadata":{"id":"qeqEt9RLGFjQ"},"source":["### Submitting the Project:\n","\n","1. After finishing the project, click on the **Share** button on the top right corner of the notebook. A new dialog box will appear.\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/2_share_button.png' width=500>\n","\n","2. In the dialog box, make sure that '**Anyone on the Internet with this link can view**' option is selected and then click on the **Copy link** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/3_copy_link.png' width=500>\n","\n","3. The link of the duplicate copy (named as **YYYY-MM-DD_StudentName_Project70**) of the notebook will get copied \n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/4_copy_link_confirmation.png' width=500>\n","\n","4. Go to your dashboard and click on the **My Projects** option.\n","   \n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/5_student_dashboard.png' width=800>\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/6_my_projects.png' width=800>\n","\n","5. Click on the **View Project** button for the project you want to submit.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/7_view_project.png' width=800>\n","\n","6. Click on the **Submit Project Here** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/8_submit_project.png' width=800>\n","\n","7. Paste the link to the project file named as **YYYY-MM-DD_StudentName_Project70** in the URL box and then click on the **Submit** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/9_enter_project_url.png' width=800> "]},{"cell_type":"markdown","metadata":{"id":"SdeV_q_xGQZV"},"source":["---"]}]}